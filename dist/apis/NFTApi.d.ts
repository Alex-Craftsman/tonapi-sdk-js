/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { NftCollection, NftCollections, NftItem, NftItems, NftSalesResponse } from '../models';
export interface GetNftCollectionRequest {
    account: string;
}
export interface GetNftForSaleRequest {
    account: string;
}
export interface GetNftItemByAddressRequest {
    account: string;
}
export interface GetNftItemsByCollectionAddressRequest {
    account: string;
}
export interface GetNftItemsByOwnerAddressRequest {
    account: string;
}
/**
 * NFTApi - interface
 *
 * @export
 * @interface NFTApiInterface
 */
export interface NFTApiInterface {
    /**
     * Get NFT collection by collection address
     * @param {string} account address in raw (hex without 0x) or base64url format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftCollectionRaw(requestParameters: GetNftCollectionRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftCollection>>;
    /**
     * Get NFT collection by collection address
     */
    getNftCollection(requestParameters: GetNftCollectionRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftCollection>;
    /**
     * Get all NFT collections
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftCollections>>;
    /**
     * Get all NFT collections
     */
    getNftCollections(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftCollections>;
    /**
     * Get NFT items for sale
     * @param {string} account address in raw (hex without 0x) or base64url format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftForSaleRaw(requestParameters: GetNftForSaleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftSalesResponse>>;
    /**
     * Get NFT items for sale
     */
    getNftForSale(requestParameters: GetNftForSaleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftSalesResponse>;
    /**
     * Get NFT item by its address
     * @param {string} account address in raw (hex without 0x) or base64url format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftItemByAddressRaw(requestParameters: GetNftItemByAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItem>>;
    /**
     * Get NFT item by its address
     */
    getNftItemByAddress(requestParameters: GetNftItemByAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItem>;
    /**
     * Get all NFT items from collection by collection address
     * @param {string} account address in raw (hex without 0x) or base64url format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftItemsByCollectionAddressRaw(requestParameters: GetNftItemsByCollectionAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get all NFT items from collection by collection address
     */
    getNftItemsByCollectionAddress(requestParameters: GetNftItemsByCollectionAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItems>;
    /**
     * Get all NFT items by owner address
     * @param {string} account address in raw (hex without 0x) or base64url format
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NFTApiInterface
     */
    getNftItemsByOwnerAddressRaw(requestParameters: GetNftItemsByOwnerAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get all NFT items by owner address
     */
    getNftItemsByOwnerAddress(requestParameters: GetNftItemsByOwnerAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItems>;
}
/**
 *
 */
export declare class NFTApi extends runtime.BaseAPI implements NFTApiInterface {
    /**
     * Get NFT collection by collection address
     */
    getNftCollectionRaw(requestParameters: GetNftCollectionRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftCollection>>;
    /**
     * Get NFT collection by collection address
     */
    getNftCollection(requestParameters: GetNftCollectionRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftCollection>;
    /**
     * Get all NFT collections
     */
    getNftCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftCollections>>;
    /**
     * Get all NFT collections
     */
    getNftCollections(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftCollections>;
    /**
     * Get NFT items for sale
     */
    getNftForSaleRaw(requestParameters: GetNftForSaleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftSalesResponse>>;
    /**
     * Get NFT items for sale
     */
    getNftForSale(requestParameters: GetNftForSaleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftSalesResponse>;
    /**
     * Get NFT item by its address
     */
    getNftItemByAddressRaw(requestParameters: GetNftItemByAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItem>>;
    /**
     * Get NFT item by its address
     */
    getNftItemByAddress(requestParameters: GetNftItemByAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItem>;
    /**
     * Get all NFT items from collection by collection address
     */
    getNftItemsByCollectionAddressRaw(requestParameters: GetNftItemsByCollectionAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get all NFT items from collection by collection address
     */
    getNftItemsByCollectionAddress(requestParameters: GetNftItemsByCollectionAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItems>;
    /**
     * Get all NFT items by owner address
     */
    getNftItemsByOwnerAddressRaw(requestParameters: GetNftItemsByOwnerAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get all NFT items by owner address
     */
    getNftItemsByOwnerAddress(requestParameters: GetNftItemsByOwnerAddressRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<NftItems>;
}
