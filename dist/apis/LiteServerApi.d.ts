/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetAllRawShardsInfo200Response, GetRawAccountState200Response, GetRawBlockProof200Response, GetRawBlockchainBlock200Response, GetRawBlockchainBlockHeader200Response, GetRawBlockchainBlockState200Response, GetRawConfig200Response, GetRawListBlockTransactions200Response, GetRawMasterchainInfo200Response, GetRawMasterchainInfoExt200Response, GetRawShardBlockProof200Response, GetRawShardInfo200Response, GetRawTime200Response, GetRawTransactions200Response, SendRawMessage200Response, SendRawMessageRequest } from '../models/index';
export interface GetAllRawShardsInfoRequest {
    blockId: string;
}
export interface GetRawAccountStateRequest {
    accountId: string;
}
export interface GetRawBlockProofRequest {
    knownBlock: string;
    mode: number;
    targetBlock?: string;
}
export interface GetRawBlockchainBlockRequest {
    blockId: string;
}
export interface GetRawBlockchainBlockHeaderRequest {
    blockId: string;
    mode: number;
}
export interface GetRawBlockchainBlockStateRequest {
    blockId: string;
}
export interface GetRawConfigRequest {
    blockId: string;
    mode: number;
}
export interface GetRawListBlockTransactionsRequest {
    blockId: string;
    mode: number;
    count: number;
    accountId?: string;
    lt?: number;
}
export interface GetRawMasterchainInfoExtRequest {
    mode: number;
}
export interface GetRawShardBlockProofRequest {
    blockId: string;
}
export interface GetRawShardInfoRequest {
    blockId: string;
    workchain: number;
    shard: number;
    exact: boolean;
}
export interface GetRawTransactionsRequest {
    accountId: string;
    count: number;
    lt: number;
    hash: string;
}
export interface SendRawMessageOperationRequest {
    sendRawMessageRequest: SendRawMessageRequest;
}
/**
 * LiteServerApi - interface
 *
 * @export
 * @interface LiteServerApiInterface
 */
export interface LiteServerApiInterface {
    /**
     * Get all raw shards info
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getAllRawShardsInfoRaw(requestParameters: GetAllRawShardsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAllRawShardsInfo200Response>>;
    /**
     * Get all raw shards info
     */
    getAllRawShardsInfo(requestParameters: GetAllRawShardsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAllRawShardsInfo200Response>;
    /**
     * Get raw account state
     * @param {string} accountId account ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawAccountStateRaw(requestParameters: GetRawAccountStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawAccountState200Response>>;
    /**
     * Get raw account state
     */
    getRawAccountState(requestParameters: GetRawAccountStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawAccountState200Response>;
    /**
     * Get raw block proof
     * @param {string} knownBlock known block: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {string} [targetBlock] target block: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawBlockProofRaw(requestParameters: GetRawBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockProof200Response>>;
    /**
     * Get raw block proof
     */
    getRawBlockProof(requestParameters: GetRawBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockProof200Response>;
    /**
     * Get raw blockchain block
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawBlockchainBlockRaw(requestParameters: GetRawBlockchainBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlock200Response>>;
    /**
     * Get raw blockchain block
     */
    getRawBlockchainBlock(requestParameters: GetRawBlockchainBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlock200Response>;
    /**
     * Get raw blockchain block header
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawBlockchainBlockHeaderRaw(requestParameters: GetRawBlockchainBlockHeaderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlockHeader200Response>>;
    /**
     * Get raw blockchain block header
     */
    getRawBlockchainBlockHeader(requestParameters: GetRawBlockchainBlockHeaderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlockHeader200Response>;
    /**
     * Get raw blockchain block state
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawBlockchainBlockStateRaw(requestParameters: GetRawBlockchainBlockStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlockState200Response>>;
    /**
     * Get raw blockchain block state
     */
    getRawBlockchainBlockState(requestParameters: GetRawBlockchainBlockStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlockState200Response>;
    /**
     * Get raw config
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawConfigRaw(requestParameters: GetRawConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawConfig200Response>>;
    /**
     * Get raw config
     */
    getRawConfig(requestParameters: GetRawConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawConfig200Response>;
    /**
     * Get raw list block transactions
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {number} count count
     * @param {string} [accountId] account ID
     * @param {number} [lt] lt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawListBlockTransactionsRaw(requestParameters: GetRawListBlockTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawListBlockTransactions200Response>>;
    /**
     * Get raw list block transactions
     */
    getRawListBlockTransactions(requestParameters: GetRawListBlockTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawListBlockTransactions200Response>;
    /**
     * Get raw masterchain info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawMasterchainInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawMasterchainInfo200Response>>;
    /**
     * Get raw masterchain info
     */
    getRawMasterchainInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawMasterchainInfo200Response>;
    /**
     * Get raw masterchain info ext
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawMasterchainInfoExtRaw(requestParameters: GetRawMasterchainInfoExtRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawMasterchainInfoExt200Response>>;
    /**
     * Get raw masterchain info ext
     */
    getRawMasterchainInfoExt(requestParameters: GetRawMasterchainInfoExtRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawMasterchainInfoExt200Response>;
    /**
     * Get raw shard block proof
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawShardBlockProofRaw(requestParameters: GetRawShardBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawShardBlockProof200Response>>;
    /**
     * Get raw shard block proof
     */
    getRawShardBlockProof(requestParameters: GetRawShardBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawShardBlockProof200Response>;
    /**
     * Get raw shard info
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} workchain workchain
     * @param {number} shard shard
     * @param {boolean} exact exact
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawShardInfoRaw(requestParameters: GetRawShardInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawShardInfo200Response>>;
    /**
     * Get raw shard info
     */
    getRawShardInfo(requestParameters: GetRawShardInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawShardInfo200Response>;
    /**
     * Get raw time
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawTimeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawTime200Response>>;
    /**
     * Get raw time
     */
    getRawTime(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawTime200Response>;
    /**
     * Get raw transactions
     * @param {string} accountId account ID
     * @param {number} count count
     * @param {number} lt lt
     * @param {string} hash hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getRawTransactionsRaw(requestParameters: GetRawTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawTransactions200Response>>;
    /**
     * Get raw transactions
     */
    getRawTransactions(requestParameters: GetRawTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawTransactions200Response>;
    /**
     * Send raw message to blockchain
     * @param {SendRawMessageRequest} sendRawMessageRequest Data that is expected
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    sendRawMessageRaw(requestParameters: SendRawMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SendRawMessage200Response>>;
    /**
     * Send raw message to blockchain
     */
    sendRawMessage(requestParameters: SendRawMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SendRawMessage200Response>;
}
/**
 *
 */
export declare class LiteServerApi extends runtime.BaseAPI implements LiteServerApiInterface {
    /**
     * Get all raw shards info
     */
    getAllRawShardsInfoRaw(requestParameters: GetAllRawShardsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAllRawShardsInfo200Response>>;
    /**
     * Get all raw shards info
     */
    getAllRawShardsInfo(requestParameters: GetAllRawShardsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAllRawShardsInfo200Response>;
    /**
     * Get raw account state
     */
    getRawAccountStateRaw(requestParameters: GetRawAccountStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawAccountState200Response>>;
    /**
     * Get raw account state
     */
    getRawAccountState(requestParameters: GetRawAccountStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawAccountState200Response>;
    /**
     * Get raw block proof
     */
    getRawBlockProofRaw(requestParameters: GetRawBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockProof200Response>>;
    /**
     * Get raw block proof
     */
    getRawBlockProof(requestParameters: GetRawBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockProof200Response>;
    /**
     * Get raw blockchain block
     */
    getRawBlockchainBlockRaw(requestParameters: GetRawBlockchainBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlock200Response>>;
    /**
     * Get raw blockchain block
     */
    getRawBlockchainBlock(requestParameters: GetRawBlockchainBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlock200Response>;
    /**
     * Get raw blockchain block header
     */
    getRawBlockchainBlockHeaderRaw(requestParameters: GetRawBlockchainBlockHeaderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlockHeader200Response>>;
    /**
     * Get raw blockchain block header
     */
    getRawBlockchainBlockHeader(requestParameters: GetRawBlockchainBlockHeaderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlockHeader200Response>;
    /**
     * Get raw blockchain block state
     */
    getRawBlockchainBlockStateRaw(requestParameters: GetRawBlockchainBlockStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawBlockchainBlockState200Response>>;
    /**
     * Get raw blockchain block state
     */
    getRawBlockchainBlockState(requestParameters: GetRawBlockchainBlockStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawBlockchainBlockState200Response>;
    /**
     * Get raw config
     */
    getRawConfigRaw(requestParameters: GetRawConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawConfig200Response>>;
    /**
     * Get raw config
     */
    getRawConfig(requestParameters: GetRawConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawConfig200Response>;
    /**
     * Get raw list block transactions
     */
    getRawListBlockTransactionsRaw(requestParameters: GetRawListBlockTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawListBlockTransactions200Response>>;
    /**
     * Get raw list block transactions
     */
    getRawListBlockTransactions(requestParameters: GetRawListBlockTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawListBlockTransactions200Response>;
    /**
     * Get raw masterchain info
     */
    getRawMasterchainInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawMasterchainInfo200Response>>;
    /**
     * Get raw masterchain info
     */
    getRawMasterchainInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawMasterchainInfo200Response>;
    /**
     * Get raw masterchain info ext
     */
    getRawMasterchainInfoExtRaw(requestParameters: GetRawMasterchainInfoExtRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawMasterchainInfoExt200Response>>;
    /**
     * Get raw masterchain info ext
     */
    getRawMasterchainInfoExt(requestParameters: GetRawMasterchainInfoExtRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawMasterchainInfoExt200Response>;
    /**
     * Get raw shard block proof
     */
    getRawShardBlockProofRaw(requestParameters: GetRawShardBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawShardBlockProof200Response>>;
    /**
     * Get raw shard block proof
     */
    getRawShardBlockProof(requestParameters: GetRawShardBlockProofRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawShardBlockProof200Response>;
    /**
     * Get raw shard info
     */
    getRawShardInfoRaw(requestParameters: GetRawShardInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawShardInfo200Response>>;
    /**
     * Get raw shard info
     */
    getRawShardInfo(requestParameters: GetRawShardInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawShardInfo200Response>;
    /**
     * Get raw time
     */
    getRawTimeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawTime200Response>>;
    /**
     * Get raw time
     */
    getRawTime(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawTime200Response>;
    /**
     * Get raw transactions
     */
    getRawTransactionsRaw(requestParameters: GetRawTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRawTransactions200Response>>;
    /**
     * Get raw transactions
     */
    getRawTransactions(requestParameters: GetRawTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRawTransactions200Response>;
    /**
     * Send raw message to blockchain
     */
    sendRawMessageRaw(requestParameters: SendRawMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SendRawMessage200Response>>;
    /**
     * Send raw message to blockchain
     */
    sendRawMessage(requestParameters: SendRawMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SendRawMessage200Response>;
}
