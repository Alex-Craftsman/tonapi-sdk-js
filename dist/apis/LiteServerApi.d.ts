/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetAccountStateLiteServer200Response, GetAllShardsInfoLiteServer200Response, GetBlockHeaderLiteServer200Response, GetBlockLiteServer200Response, GetBlockProofLiteServer200Response, GetConfigAllLiteServer200Response, GetListBlockTransactionsLiteServer200Response, GetMasterchainInfoExtLiteServer200Response, GetMasterchainInfoLiteServer200Response, GetShardBlockProofLiteServer200Response, GetShardInfoLiteServer200Response, GetStateLiteServer200Response, GetTimeLiteServer200Response, GetTransactionsLiteServer200Response, SendMessageLiteServer200Response, SendMessageLiteServerRequest } from '../models/index';
export interface GetAccountStateLiteServerRequest {
    accountId: string;
}
export interface GetAllShardsInfoLiteServerRequest {
    blockId: string;
}
export interface GetBlockHeaderLiteServerRequest {
    blockId: string;
    mode: number;
}
export interface GetBlockLiteServerRequest {
    blockId: string;
}
export interface GetBlockProofLiteServerRequest {
    knownBlock: string;
    mode: number;
    targetBlock?: string;
}
export interface GetConfigAllLiteServerRequest {
    blockId: string;
    mode: number;
}
export interface GetListBlockTransactionsLiteServerRequest {
    blockId: string;
    mode: number;
    count: number;
    accountId?: string;
    lt?: number;
}
export interface GetMasterchainInfoExtLiteServerRequest {
    mode: number;
}
export interface GetShardBlockProofLiteServerRequest {
    blockId: string;
}
export interface GetShardInfoLiteServerRequest {
    blockId: string;
    workchain: number;
    shard: number;
    exact: boolean;
}
export interface GetStateLiteServerRequest {
    blockId: string;
}
export interface GetTransactionsLiteServerRequest {
    accountId: string;
    count: number;
    lt: number;
    hash: string;
}
export interface SendMessageLiteServerOperationRequest {
    sendMessageLiteServerRequest: SendMessageLiteServerRequest;
}
/**
 * LiteServerApi - interface
 *
 * @export
 * @interface LiteServerApiInterface
 */
export interface LiteServerApiInterface {
    /**
     * Get account state
     * @param {string} accountId account ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getAccountStateLiteServerRaw(requestParameters: GetAccountStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAccountStateLiteServer200Response>>;
    /**
     * Get account state
     */
    getAccountStateLiteServer(requestParameters: GetAccountStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAccountStateLiteServer200Response>;
    /**
     * Get all shards info
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getAllShardsInfoLiteServerRaw(requestParameters: GetAllShardsInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAllShardsInfoLiteServer200Response>>;
    /**
     * Get all shards info
     */
    getAllShardsInfoLiteServer(requestParameters: GetAllShardsInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAllShardsInfoLiteServer200Response>;
    /**
     * Get block header
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getBlockHeaderLiteServerRaw(requestParameters: GetBlockHeaderLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockHeaderLiteServer200Response>>;
    /**
     * Get block header
     */
    getBlockHeaderLiteServer(requestParameters: GetBlockHeaderLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockHeaderLiteServer200Response>;
    /**
     * Get block
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getBlockLiteServerRaw(requestParameters: GetBlockLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockLiteServer200Response>>;
    /**
     * Get block
     */
    getBlockLiteServer(requestParameters: GetBlockLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockLiteServer200Response>;
    /**
     * Get block proof
     * @param {string} knownBlock known block: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {string} [targetBlock] target block: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getBlockProofLiteServerRaw(requestParameters: GetBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockProofLiteServer200Response>>;
    /**
     * Get block proof
     */
    getBlockProofLiteServer(requestParameters: GetBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockProofLiteServer200Response>;
    /**
     * Get config all
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getConfigAllLiteServerRaw(requestParameters: GetConfigAllLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetConfigAllLiteServer200Response>>;
    /**
     * Get config all
     */
    getConfigAllLiteServer(requestParameters: GetConfigAllLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetConfigAllLiteServer200Response>;
    /**
     * Get list block transactions
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} mode mode
     * @param {number} count count
     * @param {string} [accountId] account ID
     * @param {number} [lt] lt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getListBlockTransactionsLiteServerRaw(requestParameters: GetListBlockTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetListBlockTransactionsLiteServer200Response>>;
    /**
     * Get list block transactions
     */
    getListBlockTransactionsLiteServer(requestParameters: GetListBlockTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetListBlockTransactionsLiteServer200Response>;
    /**
     * Get masterchain info ext
     * @param {number} mode mode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getMasterchainInfoExtLiteServerRaw(requestParameters: GetMasterchainInfoExtLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMasterchainInfoExtLiteServer200Response>>;
    /**
     * Get masterchain info ext
     */
    getMasterchainInfoExtLiteServer(requestParameters: GetMasterchainInfoExtLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMasterchainInfoExtLiteServer200Response>;
    /**
     * Get masterchain info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getMasterchainInfoLiteServerRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMasterchainInfoLiteServer200Response>>;
    /**
     * Get masterchain info
     */
    getMasterchainInfoLiteServer(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMasterchainInfoLiteServer200Response>;
    /**
     * Get shard block proof
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getShardBlockProofLiteServerRaw(requestParameters: GetShardBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetShardBlockProofLiteServer200Response>>;
    /**
     * Get shard block proof
     */
    getShardBlockProofLiteServer(requestParameters: GetShardBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetShardBlockProofLiteServer200Response>;
    /**
     * Get shard info
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {number} workchain workchain
     * @param {number} shard shard
     * @param {boolean} exact exact
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getShardInfoLiteServerRaw(requestParameters: GetShardInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetShardInfoLiteServer200Response>>;
    /**
     * Get shard info
     */
    getShardInfoLiteServer(requestParameters: GetShardInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetShardInfoLiteServer200Response>;
    /**
     * Get block state
     * @param {string} blockId block ID: (workchain,shard,seqno,root_hash,file_hash)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getStateLiteServerRaw(requestParameters: GetStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStateLiteServer200Response>>;
    /**
     * Get block state
     */
    getStateLiteServer(requestParameters: GetStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStateLiteServer200Response>;
    /**
     * Get time
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getTimeLiteServerRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTimeLiteServer200Response>>;
    /**
     * Get time
     */
    getTimeLiteServer(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTimeLiteServer200Response>;
    /**
     * Get transactions
     * @param {string} accountId account ID
     * @param {number} count count
     * @param {number} lt lt
     * @param {string} hash hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    getTransactionsLiteServerRaw(requestParameters: GetTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTransactionsLiteServer200Response>>;
    /**
     * Get transactions
     */
    getTransactionsLiteServer(requestParameters: GetTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTransactionsLiteServer200Response>;
    /**
     * Send message
     * @param {SendMessageLiteServerRequest} sendMessageLiteServerRequest Data that is expected
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiteServerApiInterface
     */
    sendMessageLiteServerRaw(requestParameters: SendMessageLiteServerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SendMessageLiteServer200Response>>;
    /**
     * Send message
     */
    sendMessageLiteServer(requestParameters: SendMessageLiteServerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SendMessageLiteServer200Response>;
}
/**
 *
 */
export declare class LiteServerApi extends runtime.BaseAPI implements LiteServerApiInterface {
    /**
     * Get account state
     */
    getAccountStateLiteServerRaw(requestParameters: GetAccountStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAccountStateLiteServer200Response>>;
    /**
     * Get account state
     */
    getAccountStateLiteServer(requestParameters: GetAccountStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAccountStateLiteServer200Response>;
    /**
     * Get all shards info
     */
    getAllShardsInfoLiteServerRaw(requestParameters: GetAllShardsInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAllShardsInfoLiteServer200Response>>;
    /**
     * Get all shards info
     */
    getAllShardsInfoLiteServer(requestParameters: GetAllShardsInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAllShardsInfoLiteServer200Response>;
    /**
     * Get block header
     */
    getBlockHeaderLiteServerRaw(requestParameters: GetBlockHeaderLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockHeaderLiteServer200Response>>;
    /**
     * Get block header
     */
    getBlockHeaderLiteServer(requestParameters: GetBlockHeaderLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockHeaderLiteServer200Response>;
    /**
     * Get block
     */
    getBlockLiteServerRaw(requestParameters: GetBlockLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockLiteServer200Response>>;
    /**
     * Get block
     */
    getBlockLiteServer(requestParameters: GetBlockLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockLiteServer200Response>;
    /**
     * Get block proof
     */
    getBlockProofLiteServerRaw(requestParameters: GetBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockProofLiteServer200Response>>;
    /**
     * Get block proof
     */
    getBlockProofLiteServer(requestParameters: GetBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockProofLiteServer200Response>;
    /**
     * Get config all
     */
    getConfigAllLiteServerRaw(requestParameters: GetConfigAllLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetConfigAllLiteServer200Response>>;
    /**
     * Get config all
     */
    getConfigAllLiteServer(requestParameters: GetConfigAllLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetConfigAllLiteServer200Response>;
    /**
     * Get list block transactions
     */
    getListBlockTransactionsLiteServerRaw(requestParameters: GetListBlockTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetListBlockTransactionsLiteServer200Response>>;
    /**
     * Get list block transactions
     */
    getListBlockTransactionsLiteServer(requestParameters: GetListBlockTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetListBlockTransactionsLiteServer200Response>;
    /**
     * Get masterchain info ext
     */
    getMasterchainInfoExtLiteServerRaw(requestParameters: GetMasterchainInfoExtLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMasterchainInfoExtLiteServer200Response>>;
    /**
     * Get masterchain info ext
     */
    getMasterchainInfoExtLiteServer(requestParameters: GetMasterchainInfoExtLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMasterchainInfoExtLiteServer200Response>;
    /**
     * Get masterchain info
     */
    getMasterchainInfoLiteServerRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMasterchainInfoLiteServer200Response>>;
    /**
     * Get masterchain info
     */
    getMasterchainInfoLiteServer(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMasterchainInfoLiteServer200Response>;
    /**
     * Get shard block proof
     */
    getShardBlockProofLiteServerRaw(requestParameters: GetShardBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetShardBlockProofLiteServer200Response>>;
    /**
     * Get shard block proof
     */
    getShardBlockProofLiteServer(requestParameters: GetShardBlockProofLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetShardBlockProofLiteServer200Response>;
    /**
     * Get shard info
     */
    getShardInfoLiteServerRaw(requestParameters: GetShardInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetShardInfoLiteServer200Response>>;
    /**
     * Get shard info
     */
    getShardInfoLiteServer(requestParameters: GetShardInfoLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetShardInfoLiteServer200Response>;
    /**
     * Get block state
     */
    getStateLiteServerRaw(requestParameters: GetStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStateLiteServer200Response>>;
    /**
     * Get block state
     */
    getStateLiteServer(requestParameters: GetStateLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStateLiteServer200Response>;
    /**
     * Get time
     */
    getTimeLiteServerRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTimeLiteServer200Response>>;
    /**
     * Get time
     */
    getTimeLiteServer(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTimeLiteServer200Response>;
    /**
     * Get transactions
     */
    getTransactionsLiteServerRaw(requestParameters: GetTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTransactionsLiteServer200Response>>;
    /**
     * Get transactions
     */
    getTransactionsLiteServer(requestParameters: GetTransactionsLiteServerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTransactionsLiteServer200Response>;
    /**
     * Send message
     */
    sendMessageLiteServerRaw(requestParameters: SendMessageLiteServerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SendMessageLiteServer200Response>>;
    /**
     * Send message
     */
    sendMessageLiteServer(requestParameters: SendMessageLiteServerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SendMessageLiteServer200Response>;
}
