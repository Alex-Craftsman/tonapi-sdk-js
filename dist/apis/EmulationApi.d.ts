/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AccountEvent, EmulateMessageToEventRequest, Event, MessageConsequences, Trace } from '../models/index';
export interface EmulateMessageToAccountEventRequest {
    accountId: string;
    emulateMessageToEventRequest: EmulateMessageToEventRequest;
    acceptLanguage?: string;
}
export interface EmulateMessageToEventOperationRequest {
    emulateMessageToEventRequest: EmulateMessageToEventRequest;
    acceptLanguage?: string;
}
export interface EmulateMessageToTraceRequest {
    emulateMessageToEventRequest: EmulateMessageToEventRequest;
}
export interface EmulateWalletMessageRequest {
    emulateMessageToEventRequest: EmulateMessageToEventRequest;
    acceptLanguage?: string;
}
/**
 * EmulationApi - interface
 *
 * @export
 * @interface EmulationApiInterface
 */
export interface EmulationApiInterface {
    /**
     * Emulate sending message to blockchain
     * @param {string} accountId account ID
     * @param {EmulateMessageToEventRequest} emulateMessageToEventRequest bag-of-cells serialized to base64
     * @param {string} [acceptLanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmulationApiInterface
     */
    emulateMessageToAccountEventRaw(requestParameters: EmulateMessageToAccountEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountEvent>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToAccountEvent(requestParameters: EmulateMessageToAccountEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountEvent>;
    /**
     * Emulate sending message to blockchain
     * @param {EmulateMessageToEventRequest} emulateMessageToEventRequest bag-of-cells serialized to base64
     * @param {string} [acceptLanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmulationApiInterface
     */
    emulateMessageToEventRaw(requestParameters: EmulateMessageToEventOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToEvent(requestParameters: EmulateMessageToEventOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Emulate sending message to blockchain
     * @param {EmulateMessageToEventRequest} emulateMessageToEventRequest bag-of-cells serialized to base64
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmulationApiInterface
     */
    emulateMessageToTraceRaw(requestParameters: EmulateMessageToTraceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Trace>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToTrace(requestParameters: EmulateMessageToTraceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Trace>;
    /**
     * Emulate sending message to blockchain
     * @param {EmulateMessageToEventRequest} emulateMessageToEventRequest bag-of-cells serialized to base64
     * @param {string} [acceptLanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmulationApiInterface
     */
    emulateWalletMessageRaw(requestParameters: EmulateWalletMessageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageConsequences>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateWalletMessage(requestParameters: EmulateWalletMessageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageConsequences>;
}
/**
 *
 */
export declare class EmulationApi extends runtime.BaseAPI implements EmulationApiInterface {
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToAccountEventRaw(requestParameters: EmulateMessageToAccountEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountEvent>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToAccountEvent(requestParameters: EmulateMessageToAccountEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountEvent>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToEventRaw(requestParameters: EmulateMessageToEventOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToEvent(requestParameters: EmulateMessageToEventOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToTraceRaw(requestParameters: EmulateMessageToTraceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Trace>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateMessageToTrace(requestParameters: EmulateMessageToTraceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Trace>;
    /**
     * Emulate sending message to blockchain
     */
    emulateWalletMessageRaw(requestParameters: EmulateWalletMessageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageConsequences>>;
    /**
     * Emulate sending message to blockchain
     */
    emulateWalletMessage(requestParameters: EmulateWalletMessageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageConsequences>;
}
