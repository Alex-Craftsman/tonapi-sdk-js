"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class ConnectApi extends runtime.BaseAPI {
    /**
     * Get account info by state init
     */
    getAccountInfoByStateInitRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.getAccountInfoByStateInitRequest === null || requestParameters.getAccountInfoByStateInitRequest === undefined) {
                throw new runtime.RequiredError('getAccountInfoByStateInitRequest', 'Required parameter requestParameters.getAccountInfoByStateInitRequest was null or undefined when calling getAccountInfoByStateInit.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/v2/tonconnect/stateinit`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.GetAccountInfoByStateInitRequestToJSON)(requestParameters.getAccountInfoByStateInitRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AccountInfoByStateInitFromJSON)(jsonValue));
        });
    }
    /**
     * Get account info by state init
     */
    getAccountInfoByStateInit(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getAccountInfoByStateInitRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a payload for further token receipt
     */
    getTonConnectPayloadRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/v2/tonconnect/payload`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.GetTonConnectPayload200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     * Get a payload for further token receipt
     */
    getTonConnectPayload(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getTonConnectPayloadRaw(initOverrides);
            return yield response.value();
        });
    }
}
exports.ConnectApi = ConnectApi;
