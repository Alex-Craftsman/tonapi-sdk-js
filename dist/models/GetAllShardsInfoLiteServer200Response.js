"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetAllShardsInfoLiteServer200ResponseToJSON = exports.GetAllShardsInfoLiteServer200ResponseFromJSONTyped = exports.GetAllShardsInfoLiteServer200ResponseFromJSON = exports.instanceOfGetAllShardsInfoLiteServer200Response = void 0;
const BlockRaw_1 = require("./BlockRaw");
/**
 * Check if a given object implements the GetAllShardsInfoLiteServer200Response interface.
 */
function instanceOfGetAllShardsInfoLiteServer200Response(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "proof" in value;
    isInstance = isInstance && "data" in value;
    return isInstance;
}
exports.instanceOfGetAllShardsInfoLiteServer200Response = instanceOfGetAllShardsInfoLiteServer200Response;
function GetAllShardsInfoLiteServer200ResponseFromJSON(json) {
    return GetAllShardsInfoLiteServer200ResponseFromJSONTyped(json, false);
}
exports.GetAllShardsInfoLiteServer200ResponseFromJSON = GetAllShardsInfoLiteServer200ResponseFromJSON;
function GetAllShardsInfoLiteServer200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': (0, BlockRaw_1.BlockRawFromJSON)(json['id']),
        'proof': json['proof'],
        'data': json['data'],
    };
}
exports.GetAllShardsInfoLiteServer200ResponseFromJSONTyped = GetAllShardsInfoLiteServer200ResponseFromJSONTyped;
function GetAllShardsInfoLiteServer200ResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': (0, BlockRaw_1.BlockRawToJSON)(value.id),
        'proof': value.proof,
        'data': value.data,
    };
}
exports.GetAllShardsInfoLiteServer200ResponseToJSON = GetAllShardsInfoLiteServer200ResponseToJSON;
