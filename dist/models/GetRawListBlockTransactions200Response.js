"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetRawListBlockTransactions200ResponseToJSON = exports.GetRawListBlockTransactions200ResponseFromJSONTyped = exports.GetRawListBlockTransactions200ResponseFromJSON = exports.instanceOfGetRawListBlockTransactions200Response = void 0;
const BlockRaw_1 = require("./BlockRaw");
const GetRawListBlockTransactions200ResponseIdsInner_1 = require("./GetRawListBlockTransactions200ResponseIdsInner");
/**
 * Check if a given object implements the GetRawListBlockTransactions200Response interface.
 */
function instanceOfGetRawListBlockTransactions200Response(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "reqCount" in value;
    isInstance = isInstance && "incomplete" in value;
    isInstance = isInstance && "ids" in value;
    isInstance = isInstance && "proof" in value;
    return isInstance;
}
exports.instanceOfGetRawListBlockTransactions200Response = instanceOfGetRawListBlockTransactions200Response;
function GetRawListBlockTransactions200ResponseFromJSON(json) {
    return GetRawListBlockTransactions200ResponseFromJSONTyped(json, false);
}
exports.GetRawListBlockTransactions200ResponseFromJSON = GetRawListBlockTransactions200ResponseFromJSON;
function GetRawListBlockTransactions200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': (0, BlockRaw_1.BlockRawFromJSON)(json['id']),
        'reqCount': json['req_count'],
        'incomplete': json['incomplete'],
        'ids': (json['ids'].map(GetRawListBlockTransactions200ResponseIdsInner_1.GetRawListBlockTransactions200ResponseIdsInnerFromJSON)),
        'proof': json['proof'],
    };
}
exports.GetRawListBlockTransactions200ResponseFromJSONTyped = GetRawListBlockTransactions200ResponseFromJSONTyped;
function GetRawListBlockTransactions200ResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': (0, BlockRaw_1.BlockRawToJSON)(value.id),
        'req_count': value.reqCount,
        'incomplete': value.incomplete,
        'ids': (value.ids.map(GetRawListBlockTransactions200ResponseIdsInner_1.GetRawListBlockTransactions200ResponseIdsInnerToJSON)),
        'proof': value.proof,
    };
}
exports.GetRawListBlockTransactions200ResponseToJSON = GetRawListBlockTransactions200ResponseToJSON;
