"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NftPurchaseToJSON = exports.NftPurchaseFromJSONTyped = exports.NftPurchaseFromJSON = exports.instanceOfNftPurchase = exports.NftPurchasePurchaseTypeEnum = void 0;
const runtime_1 = require("../runtime");
const AccountAddress_1 = require("./AccountAddress");
const NftItemRepr_1 = require("./NftItemRepr");
const Price_1 = require("./Price");
/**
 * @export
 */
exports.NftPurchasePurchaseTypeEnum = {
    DnsTg: 'DNS.tg',
    Getgems: 'getgems'
};
/**
 * Check if a given object implements the NftPurchase interface.
 */
function instanceOfNftPurchase(value) {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "buyer" in value;
    isInstance = isInstance && "nft" in value;
    isInstance = isInstance && "seller" in value;
    return isInstance;
}
exports.instanceOfNftPurchase = instanceOfNftPurchase;
function NftPurchaseFromJSON(json) {
    return NftPurchaseFromJSONTyped(json, false);
}
exports.NftPurchaseFromJSON = NftPurchaseFromJSON;
function NftPurchaseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': (0, Price_1.PriceFromJSON)(json['amount']),
        'buyer': (0, AccountAddress_1.AccountAddressFromJSON)(json['buyer']),
        'nft': (0, NftItemRepr_1.NftItemReprFromJSON)(json['nft']),
        'purchaseType': !(0, runtime_1.exists)(json, 'purchase_type') ? undefined : json['purchase_type'],
        'seller': (0, AccountAddress_1.AccountAddressFromJSON)(json['seller']),
    };
}
exports.NftPurchaseFromJSONTyped = NftPurchaseFromJSONTyped;
function NftPurchaseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, Price_1.PriceToJSON)(value.amount),
        'buyer': (0, AccountAddress_1.AccountAddressToJSON)(value.buyer),
        'nft': (0, NftItemRepr_1.NftItemReprToJSON)(value.nft),
        'purchase_type': value.purchaseType,
        'seller': (0, AccountAddress_1.AccountAddressToJSON)(value.seller),
    };
}
exports.NftPurchaseToJSON = NftPurchaseToJSON;
