/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AccountAddress } from './AccountAddress';
import type { NftItem } from './NftItem';
import type { Price } from './Price';
/**
 *
 * @export
 * @interface AuctionBidAction
 */
export interface AuctionBidAction {
    /**
     *
     * @type {string}
     * @memberof AuctionBidAction
     */
    auctionType: AuctionBidActionAuctionTypeEnum;
    /**
     *
     * @type {Price}
     * @memberof AuctionBidAction
     */
    amount: Price;
    /**
     *
     * @type {NftItem}
     * @memberof AuctionBidAction
     */
    nft?: NftItem;
    /**
     *
     * @type {AccountAddress}
     * @memberof AuctionBidAction
     */
    bidder: AccountAddress;
    /**
     *
     * @type {AccountAddress}
     * @memberof AuctionBidAction
     */
    auction: AccountAddress;
}
/**
 * @export
 */
export declare const AuctionBidActionAuctionTypeEnum: {
    readonly DnsTon: "DNS.ton";
    readonly DnsTg: "DNS.tg";
    readonly NumberTg: "NUMBER.tg";
    readonly Getgems: "getgems";
};
export declare type AuctionBidActionAuctionTypeEnum = typeof AuctionBidActionAuctionTypeEnum[keyof typeof AuctionBidActionAuctionTypeEnum];
/**
 * Check if a given object implements the AuctionBidAction interface.
 */
export declare function instanceOfAuctionBidAction(value: object): boolean;
export declare function AuctionBidActionFromJSON(json: any): AuctionBidAction;
export declare function AuctionBidActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuctionBidAction;
export declare function AuctionBidActionToJSON(value?: AuctionBidAction | null): any;
