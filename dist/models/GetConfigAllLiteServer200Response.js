"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetConfigAllLiteServer200ResponseToJSON = exports.GetConfigAllLiteServer200ResponseFromJSONTyped = exports.GetConfigAllLiteServer200ResponseFromJSON = exports.instanceOfGetConfigAllLiteServer200Response = void 0;
const BlockRaw_1 = require("./BlockRaw");
/**
 * Check if a given object implements the GetConfigAllLiteServer200Response interface.
 */
function instanceOfGetConfigAllLiteServer200Response(value) {
    let isInstance = true;
    isInstance = isInstance && "mode" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "stateProof" in value;
    isInstance = isInstance && "configProof" in value;
    return isInstance;
}
exports.instanceOfGetConfigAllLiteServer200Response = instanceOfGetConfigAllLiteServer200Response;
function GetConfigAllLiteServer200ResponseFromJSON(json) {
    return GetConfigAllLiteServer200ResponseFromJSONTyped(json, false);
}
exports.GetConfigAllLiteServer200ResponseFromJSON = GetConfigAllLiteServer200ResponseFromJSON;
function GetConfigAllLiteServer200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'mode': json['mode'],
        'id': (0, BlockRaw_1.BlockRawFromJSON)(json['id']),
        'stateProof': json['state_proof'],
        'configProof': json['config_proof'],
    };
}
exports.GetConfigAllLiteServer200ResponseFromJSONTyped = GetConfigAllLiteServer200ResponseFromJSONTyped;
function GetConfigAllLiteServer200ResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'mode': value.mode,
        'id': (0, BlockRaw_1.BlockRawToJSON)(value.id),
        'state_proof': value.stateProof,
        'config_proof': value.configProof,
    };
}
exports.GetConfigAllLiteServer200ResponseToJSON = GetConfigAllLiteServer200ResponseToJSON;
