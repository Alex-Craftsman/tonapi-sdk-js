"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmartContractActionToJSON = exports.SmartContractActionFromJSONTyped = exports.SmartContractActionFromJSON = exports.instanceOfSmartContractAction = void 0;
const runtime_1 = require("../runtime");
const AccountAddress_1 = require("./AccountAddress");
const Refund_1 = require("./Refund");
/**
 * Check if a given object implements the SmartContractAction interface.
 */
function instanceOfSmartContractAction(value) {
    let isInstance = true;
    isInstance = isInstance && "executor" in value;
    isInstance = isInstance && "contract" in value;
    isInstance = isInstance && "tonAttached" in value;
    isInstance = isInstance && "operation" in value;
    return isInstance;
}
exports.instanceOfSmartContractAction = instanceOfSmartContractAction;
function SmartContractActionFromJSON(json) {
    return SmartContractActionFromJSONTyped(json, false);
}
exports.SmartContractActionFromJSON = SmartContractActionFromJSON;
function SmartContractActionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'executor': (0, AccountAddress_1.AccountAddressFromJSON)(json['executor']),
        'contract': (0, AccountAddress_1.AccountAddressFromJSON)(json['contract']),
        'tonAttached': json['ton_attached'],
        'operation': json['operation'],
        'payload': !(0, runtime_1.exists)(json, 'payload') ? undefined : json['payload'],
        'refund': !(0, runtime_1.exists)(json, 'refund') ? undefined : (0, Refund_1.RefundFromJSON)(json['refund']),
    };
}
exports.SmartContractActionFromJSONTyped = SmartContractActionFromJSONTyped;
function SmartContractActionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'executor': (0, AccountAddress_1.AccountAddressToJSON)(value.executor),
        'contract': (0, AccountAddress_1.AccountAddressToJSON)(value.contract),
        'ton_attached': value.tonAttached,
        'operation': value.operation,
        'payload': value.payload,
        'refund': (0, Refund_1.RefundToJSON)(value.refund),
    };
}
exports.SmartContractActionToJSON = SmartContractActionToJSON;
