"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuctionBidActionToJSON = exports.AuctionBidActionFromJSONTyped = exports.AuctionBidActionFromJSON = exports.instanceOfAuctionBidAction = exports.AuctionBidActionAuctionTypeEnum = void 0;
const runtime_1 = require("../runtime");
const AccountAddress_1 = require("./AccountAddress");
const NftItem_1 = require("./NftItem");
const Price_1 = require("./Price");
/**
 * @export
 */
exports.AuctionBidActionAuctionTypeEnum = {
    DnsTon: 'DNS.ton',
    DnsTg: 'DNS.tg',
    NumberTg: 'NUMBER.tg',
    Getgems: 'getgems'
};
/**
 * Check if a given object implements the AuctionBidAction interface.
 */
function instanceOfAuctionBidAction(value) {
    let isInstance = true;
    isInstance = isInstance && "auctionType" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "bidder" in value;
    isInstance = isInstance && "auction" in value;
    return isInstance;
}
exports.instanceOfAuctionBidAction = instanceOfAuctionBidAction;
function AuctionBidActionFromJSON(json) {
    return AuctionBidActionFromJSONTyped(json, false);
}
exports.AuctionBidActionFromJSON = AuctionBidActionFromJSON;
function AuctionBidActionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'auctionType': json['auction_type'],
        'amount': (0, Price_1.PriceFromJSON)(json['amount']),
        'nft': !(0, runtime_1.exists)(json, 'nft') ? undefined : (0, NftItem_1.NftItemFromJSON)(json['nft']),
        'bidder': (0, AccountAddress_1.AccountAddressFromJSON)(json['bidder']),
        'auction': json['auction'],
    };
}
exports.AuctionBidActionFromJSONTyped = AuctionBidActionFromJSONTyped;
function AuctionBidActionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'auction_type': value.auctionType,
        'amount': (0, Price_1.PriceToJSON)(value.amount),
        'nft': (0, NftItem_1.NftItemToJSON)(value.nft),
        'bidder': (0, AccountAddress_1.AccountAddressToJSON)(value.bidder),
        'auction': value.auction,
    };
}
exports.AuctionBidActionToJSON = AuctionBidActionToJSON;
