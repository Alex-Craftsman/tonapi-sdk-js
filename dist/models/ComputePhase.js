"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComputePhaseToJSON = exports.ComputePhaseFromJSONTyped = exports.ComputePhaseFromJSON = exports.instanceOfComputePhase = void 0;
const runtime_1 = require("../runtime");
const ComputeSkipReason_1 = require("./ComputeSkipReason");
/**
 * Check if a given object implements the ComputePhase interface.
 */
function instanceOfComputePhase(value) {
    let isInstance = true;
    isInstance = isInstance && "skipped" in value;
    return isInstance;
}
exports.instanceOfComputePhase = instanceOfComputePhase;
function ComputePhaseFromJSON(json) {
    return ComputePhaseFromJSONTyped(json, false);
}
exports.ComputePhaseFromJSON = ComputePhaseFromJSON;
function ComputePhaseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'skipped': json['skipped'],
        'skipReason': !(0, runtime_1.exists)(json, 'skip_reason') ? undefined : (0, ComputeSkipReason_1.ComputeSkipReasonFromJSON)(json['skip_reason']),
        'success': !(0, runtime_1.exists)(json, 'success') ? undefined : json['success'],
        'gasFees': !(0, runtime_1.exists)(json, 'gas_fees') ? undefined : json['gas_fees'],
        'gasUsed': !(0, runtime_1.exists)(json, 'gas_used') ? undefined : json['gas_used'],
        'vmSteps': !(0, runtime_1.exists)(json, 'vm_steps') ? undefined : json['vm_steps'],
        'exitCode': !(0, runtime_1.exists)(json, 'exit_code') ? undefined : json['exit_code'],
    };
}
exports.ComputePhaseFromJSONTyped = ComputePhaseFromJSONTyped;
function ComputePhaseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'skipped': value.skipped,
        'skip_reason': (0, ComputeSkipReason_1.ComputeSkipReasonToJSON)(value.skipReason),
        'success': value.success,
        'gas_fees': value.gasFees,
        'gas_used': value.gasUsed,
        'vm_steps': value.vmSteps,
        'exit_code': value.exitCode,
    };
}
exports.ComputePhaseToJSON = ComputePhaseToJSON;
