"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionActionToJSON = exports.SubscriptionActionFromJSONTyped = exports.SubscriptionActionFromJSON = exports.instanceOfSubscriptionAction = void 0;
const AccountAddress_1 = require("./AccountAddress");
/**
 * Check if a given object implements the SubscriptionAction interface.
 */
function instanceOfSubscriptionAction(value) {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "beneficiary" in value;
    isInstance = isInstance && "initial" in value;
    isInstance = isInstance && "subscriber" in value;
    isInstance = isInstance && "subscription" in value;
    return isInstance;
}
exports.instanceOfSubscriptionAction = instanceOfSubscriptionAction;
function SubscriptionActionFromJSON(json) {
    return SubscriptionActionFromJSONTyped(json, false);
}
exports.SubscriptionActionFromJSON = SubscriptionActionFromJSON;
function SubscriptionActionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': json['amount'],
        'beneficiary': (0, AccountAddress_1.AccountAddressFromJSON)(json['beneficiary']),
        'initial': json['initial'],
        'subscriber': (0, AccountAddress_1.AccountAddressFromJSON)(json['subscriber']),
        'subscription': json['subscription'],
    };
}
exports.SubscriptionActionFromJSONTyped = SubscriptionActionFromJSONTyped;
function SubscriptionActionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': value.amount,
        'beneficiary': (0, AccountAddress_1.AccountAddressToJSON)(value.beneficiary),
        'initial': value.initial,
        'subscriber': (0, AccountAddress_1.AccountAddressToJSON)(value.subscriber),
        'subscription': value.subscription,
    };
}
exports.SubscriptionActionToJSON = SubscriptionActionToJSON;
