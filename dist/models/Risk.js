"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RiskToJSON = exports.RiskFromJSONTyped = exports.RiskFromJSON = exports.instanceOfRisk = void 0;
const JettonQuantity_1 = require("./JettonQuantity");
const NftItem_1 = require("./NftItem");
/**
 * Check if a given object implements the Risk interface.
 */
function instanceOfRisk(value) {
    let isInstance = true;
    isInstance = isInstance && "transferAllRemainingBalance" in value;
    isInstance = isInstance && "ton" in value;
    isInstance = isInstance && "jettons" in value;
    isInstance = isInstance && "nfts" in value;
    return isInstance;
}
exports.instanceOfRisk = instanceOfRisk;
function RiskFromJSON(json) {
    return RiskFromJSONTyped(json, false);
}
exports.RiskFromJSON = RiskFromJSON;
function RiskFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'transferAllRemainingBalance': json['transfer_all_remaining_balance'],
        'ton': json['ton'],
        'jettons': (json['jettons'].map(JettonQuantity_1.JettonQuantityFromJSON)),
        'nfts': (json['nfts'].map(NftItem_1.NftItemFromJSON)),
    };
}
exports.RiskFromJSONTyped = RiskFromJSONTyped;
function RiskToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'transfer_all_remaining_balance': value.transferAllRemainingBalance,
        'ton': value.ton,
        'jettons': (value.jettons.map(JettonQuantity_1.JettonQuantityToJSON)),
        'nfts': (value.nfts.map(NftItem_1.NftItemToJSON)),
    };
}
exports.RiskToJSON = RiskToJSON;
