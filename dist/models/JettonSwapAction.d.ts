/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AccountAddress } from './AccountAddress';
import type { JettonPreview } from './JettonPreview';
/**
 *
 * @export
 * @interface JettonSwapAction
 */
export interface JettonSwapAction {
    /**
     *
     * @type {string}
     * @memberof JettonSwapAction
     */
    dex: JettonSwapActionDexEnum;
    /**
     *
     * @type {string}
     * @memberof JettonSwapAction
     */
    amountIn: string;
    /**
     *
     * @type {string}
     * @memberof JettonSwapAction
     */
    amountOut: string;
    /**
     *
     * @type {AccountAddress}
     * @memberof JettonSwapAction
     */
    userWallet: AccountAddress;
    /**
     *
     * @type {AccountAddress}
     * @memberof JettonSwapAction
     */
    router: AccountAddress;
    /**
     *
     * @type {string}
     * @memberof JettonSwapAction
     */
    jettonWalletIn: string;
    /**
     *
     * @type {JettonPreview}
     * @memberof JettonSwapAction
     */
    jettonMasterIn: JettonPreview;
    /**
     *
     * @type {string}
     * @memberof JettonSwapAction
     */
    jettonWalletOut: string;
    /**
     *
     * @type {JettonPreview}
     * @memberof JettonSwapAction
     */
    jettonMasterOut: JettonPreview;
}
/**
 * @export
 */
export declare const JettonSwapActionDexEnum: {
    readonly Stonfi: "stonfi";
    readonly Dedust: "dedust";
    readonly Megatonfi: "megatonfi";
};
export declare type JettonSwapActionDexEnum = typeof JettonSwapActionDexEnum[keyof typeof JettonSwapActionDexEnum];
/**
 * Check if a given object implements the JettonSwapAction interface.
 */
export declare function instanceOfJettonSwapAction(value: object): boolean;
export declare function JettonSwapActionFromJSON(json: any): JettonSwapAction;
export declare function JettonSwapActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): JettonSwapAction;
export declare function JettonSwapActionToJSON(value?: JettonSwapAction | null): any;
