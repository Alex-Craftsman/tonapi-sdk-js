"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithdrawStakeRequestActionToJSON = exports.WithdrawStakeRequestActionFromJSONTyped = exports.WithdrawStakeRequestActionFromJSON = exports.instanceOfWithdrawStakeRequestAction = void 0;
const runtime_1 = require("../runtime");
const AccountAddress_1 = require("./AccountAddress");
/**
 * Check if a given object implements the WithdrawStakeRequestAction interface.
 */
function instanceOfWithdrawStakeRequestAction(value) {
    let isInstance = true;
    isInstance = isInstance && "staker" in value;
    isInstance = isInstance && "pool" in value;
    return isInstance;
}
exports.instanceOfWithdrawStakeRequestAction = instanceOfWithdrawStakeRequestAction;
function WithdrawStakeRequestActionFromJSON(json) {
    return WithdrawStakeRequestActionFromJSONTyped(json, false);
}
exports.WithdrawStakeRequestActionFromJSON = WithdrawStakeRequestActionFromJSON;
function WithdrawStakeRequestActionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'staker': (0, AccountAddress_1.AccountAddressFromJSON)(json['staker']),
        'pool': (0, AccountAddress_1.AccountAddressFromJSON)(json['pool']),
    };
}
exports.WithdrawStakeRequestActionFromJSONTyped = WithdrawStakeRequestActionFromJSONTyped;
function WithdrawStakeRequestActionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': value.amount,
        'staker': (0, AccountAddress_1.AccountAddressToJSON)(value.staker),
        'pool': (0, AccountAddress_1.AccountAddressToJSON)(value.pool),
    };
}
exports.WithdrawStakeRequestActionToJSON = WithdrawStakeRequestActionToJSON;
