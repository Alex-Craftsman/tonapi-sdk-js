/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AccountAddress } from './AccountAddress';
import type { AccountStatus } from './AccountStatus';
import type { ActionPhase } from './ActionPhase';
import type { BouncePhaseType } from './BouncePhaseType';
import type { ComputePhase } from './ComputePhase';
import type { CreditPhase } from './CreditPhase';
import type { Message } from './Message';
import type { StoragePhase } from './StoragePhase';
import type { TransactionType } from './TransactionType';
/**
 *
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     *
     * @type {string}
     * @memberof Transaction
     */
    hash: string;
    /**
     *
     * @type {number}
     * @memberof Transaction
     */
    lt: number;
    /**
     *
     * @type {AccountAddress}
     * @memberof Transaction
     */
    account: AccountAddress;
    /**
     *
     * @type {boolean}
     * @memberof Transaction
     */
    success: boolean;
    /**
     *
     * @type {number}
     * @memberof Transaction
     */
    utime: number;
    /**
     *
     * @type {AccountStatus}
     * @memberof Transaction
     */
    origStatus: AccountStatus;
    /**
     *
     * @type {AccountStatus}
     * @memberof Transaction
     */
    endStatus: AccountStatus;
    /**
     *
     * @type {number}
     * @memberof Transaction
     */
    totalFees: number;
    /**
     *
     * @type {TransactionType}
     * @memberof Transaction
     */
    transactionType: TransactionType;
    /**
     *
     * @type {string}
     * @memberof Transaction
     */
    stateUpdateOld: string;
    /**
     *
     * @type {string}
     * @memberof Transaction
     */
    stateUpdateNew: string;
    /**
     *
     * @type {Message}
     * @memberof Transaction
     */
    inMsg?: Message;
    /**
     *
     * @type {Array<Message>}
     * @memberof Transaction
     */
    outMsgs: Array<Message>;
    /**
     *
     * @type {string}
     * @memberof Transaction
     */
    block: string;
    /**
     *
     * @type {string}
     * @memberof Transaction
     */
    prevTransHash?: string;
    /**
     *
     * @type {number}
     * @memberof Transaction
     */
    prevTransLt?: number;
    /**
     *
     * @type {ComputePhase}
     * @memberof Transaction
     */
    computePhase?: ComputePhase;
    /**
     *
     * @type {StoragePhase}
     * @memberof Transaction
     */
    storagePhase?: StoragePhase;
    /**
     *
     * @type {CreditPhase}
     * @memberof Transaction
     */
    creditPhase?: CreditPhase;
    /**
     *
     * @type {ActionPhase}
     * @memberof Transaction
     */
    actionPhase?: ActionPhase;
    /**
     *
     * @type {BouncePhaseType}
     * @memberof Transaction
     */
    bouncePhase?: BouncePhaseType;
    /**
     *
     * @type {boolean}
     * @memberof Transaction
     */
    aborted: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Transaction
     */
    destroyed: boolean;
}
/**
 * Check if a given object implements the Transaction interface.
 */
export declare function instanceOfTransaction(value: object): boolean;
export declare function TransactionFromJSON(json: any): Transaction;
export declare function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction;
export declare function TransactionToJSON(value?: Transaction | null): any;
