"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NftItemToJSON = exports.NftItemFromJSONTyped = exports.NftItemFromJSON = void 0;
const runtime_1 = require("../runtime");
const AccountAddress_1 = require("./AccountAddress");
function NftItemFromJSON(json) {
    return NftItemFromJSONTyped(json, false);
}
exports.NftItemFromJSON = NftItemFromJSON;
function NftItemFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'address': json['address'],
        'collectionAddress': !(0, runtime_1.exists)(json, 'collection_address') ? undefined : json['collection_address'],
        'index': json['index'],
        'init': json['init'],
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
        'owner': !(0, runtime_1.exists)(json, 'owner') ? undefined : (0, AccountAddress_1.AccountAddressFromJSON)(json['owner']),
        'rawIndividualContent': json['raw_individual_content'],
        'verified': json['verified'],
    };
}
exports.NftItemFromJSONTyped = NftItemFromJSONTyped;
function NftItemToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'address': value.address,
        'collection_address': value.collectionAddress,
        'index': value.index,
        'init': value.init,
        'metadata': value.metadata,
        'owner': (0, AccountAddress_1.AccountAddressToJSON)(value.owner),
        'raw_individual_content': value.rawIndividualContent,
        'verified': value.verified,
    };
}
exports.NftItemToJSON = NftItemToJSON;
