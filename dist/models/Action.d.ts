/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ActionSimplePreview } from './ActionSimplePreview';
import type { AuctionBidAction } from './AuctionBidAction';
import type { ContractDeployAction } from './ContractDeployAction';
import type { DepositStakeAction } from './DepositStakeAction';
import type { ElectionsDepositStakeAction } from './ElectionsDepositStakeAction';
import type { ElectionsRecoverStakeAction } from './ElectionsRecoverStakeAction';
import type { JettonBurnAction } from './JettonBurnAction';
import type { JettonMintAction } from './JettonMintAction';
import type { JettonSwapAction } from './JettonSwapAction';
import type { JettonTransferAction } from './JettonTransferAction';
import type { NftItemTransferAction } from './NftItemTransferAction';
import type { NftPurchaseAction } from './NftPurchaseAction';
import type { SmartContractAction } from './SmartContractAction';
import type { SubscriptionAction } from './SubscriptionAction';
import type { TonTransferAction } from './TonTransferAction';
import type { UnSubscriptionAction } from './UnSubscriptionAction';
import type { WithdrawStakeAction } from './WithdrawStakeAction';
import type { WithdrawStakeRequestAction } from './WithdrawStakeRequestAction';
/**
 *
 * @export
 * @interface Action
 */
export interface Action {
    /**
     *
     * @type {string}
     * @memberof Action
     */
    type: ActionTypeEnum;
    /**
     *
     * @type {string}
     * @memberof Action
     */
    status: ActionStatusEnum;
    /**
     *
     * @type {TonTransferAction}
     * @memberof Action
     */
    tonTransfer?: TonTransferAction;
    /**
     *
     * @type {ContractDeployAction}
     * @memberof Action
     */
    contractDeploy?: ContractDeployAction;
    /**
     *
     * @type {JettonTransferAction}
     * @memberof Action
     */
    jettonTransfer?: JettonTransferAction;
    /**
     *
     * @type {JettonBurnAction}
     * @memberof Action
     */
    jettonBurn?: JettonBurnAction;
    /**
     *
     * @type {JettonMintAction}
     * @memberof Action
     */
    jettonMint?: JettonMintAction;
    /**
     *
     * @type {NftItemTransferAction}
     * @memberof Action
     */
    nftItemTransfer?: NftItemTransferAction;
    /**
     *
     * @type {SubscriptionAction}
     * @memberof Action
     */
    subscribe?: SubscriptionAction;
    /**
     *
     * @type {UnSubscriptionAction}
     * @memberof Action
     */
    unSubscribe?: UnSubscriptionAction;
    /**
     *
     * @type {AuctionBidAction}
     * @memberof Action
     */
    auctionBid?: AuctionBidAction;
    /**
     *
     * @type {NftPurchaseAction}
     * @memberof Action
     */
    nftPurchase?: NftPurchaseAction;
    /**
     *
     * @type {DepositStakeAction}
     * @memberof Action
     */
    depositStake?: DepositStakeAction;
    /**
     *
     * @type {WithdrawStakeAction}
     * @memberof Action
     */
    withdrawStake?: WithdrawStakeAction;
    /**
     *
     * @type {WithdrawStakeRequestAction}
     * @memberof Action
     */
    withdrawStakeRequest?: WithdrawStakeRequestAction;
    /**
     *
     * @type {ElectionsDepositStakeAction}
     * @memberof Action
     */
    electionsDepositStake?: ElectionsDepositStakeAction;
    /**
     *
     * @type {ElectionsRecoverStakeAction}
     * @memberof Action
     */
    electionsRecoverStake?: ElectionsRecoverStakeAction;
    /**
     *
     * @type {JettonSwapAction}
     * @memberof Action
     */
    jettonSwap?: JettonSwapAction;
    /**
     *
     * @type {SmartContractAction}
     * @memberof Action
     */
    smartContractExec?: SmartContractAction;
    /**
     *
     * @type {ActionSimplePreview}
     * @memberof Action
     */
    simplePreview: ActionSimplePreview;
}
/**
 * @export
 */
export declare const ActionTypeEnum: {
    readonly TonTransfer: "TonTransfer";
    readonly JettonTransfer: "JettonTransfer";
    readonly JettonBurn: "JettonBurn";
    readonly JettonMint: "JettonMint";
    readonly NftItemTransfer: "NftItemTransfer";
    readonly ContractDeploy: "ContractDeploy";
    readonly Subscribe: "Subscribe";
    readonly UnSubscribe: "UnSubscribe";
    readonly AuctionBid: "AuctionBid";
    readonly NftPurchase: "NftPurchase";
    readonly DepositStake: "DepositStake";
    readonly WithdrawStake: "WithdrawStake";
    readonly WithdrawStakeRequest: "WithdrawStakeRequest";
    readonly JettonSwap: "JettonSwap";
    readonly SmartContractExec: "SmartContractExec";
    readonly ElectionsRecoverStake: "ElectionsRecoverStake";
    readonly ElectionsDepositStake: "ElectionsDepositStake";
    readonly Unknown: "Unknown";
};
export declare type ActionTypeEnum = typeof ActionTypeEnum[keyof typeof ActionTypeEnum];
/**
 * @export
 */
export declare const ActionStatusEnum: {
    readonly Ok: "ok";
    readonly Failed: "failed";
};
export declare type ActionStatusEnum = typeof ActionStatusEnum[keyof typeof ActionStatusEnum];
/**
 * Check if a given object implements the Action interface.
 */
export declare function instanceOfAction(value: object): boolean;
export declare function ActionFromJSON(json: any): Action;
export declare function ActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Action;
export declare function ActionToJSON(value?: Action | null): any;
