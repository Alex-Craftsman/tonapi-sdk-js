"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidatorsToJSON = exports.ValidatorsFromJSONTyped = exports.ValidatorsFromJSON = exports.instanceOfValidators = void 0;
const Validator_1 = require("./Validator");
/**
 * Check if a given object implements the Validators interface.
 */
function instanceOfValidators(value) {
    let isInstance = true;
    isInstance = isInstance && "electAt" in value;
    isInstance = isInstance && "electClose" in value;
    isInstance = isInstance && "minStake" in value;
    isInstance = isInstance && "totalStake" in value;
    isInstance = isInstance && "validators" in value;
    return isInstance;
}
exports.instanceOfValidators = instanceOfValidators;
function ValidatorsFromJSON(json) {
    return ValidatorsFromJSONTyped(json, false);
}
exports.ValidatorsFromJSON = ValidatorsFromJSON;
function ValidatorsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'electAt': json['electAt'],
        'electClose': json['electClose'],
        'minStake': json['minStake'],
        'totalStake': json['totalStake'],
        'validators': (json['validators'].map(Validator_1.ValidatorFromJSON)),
    };
}
exports.ValidatorsFromJSONTyped = ValidatorsFromJSONTyped;
function ValidatorsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'electAt': value.electAt,
        'electClose': value.electClose,
        'minStake': value.minStake,
        'totalStake': value.totalStake,
        'validators': (value.validators.map(Validator_1.ValidatorToJSON)),
    };
}
exports.ValidatorsToJSON = ValidatorsToJSON;
