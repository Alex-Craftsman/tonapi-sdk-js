"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockchainAccountInspectToJSON = exports.BlockchainAccountInspectFromJSONTyped = exports.BlockchainAccountInspectFromJSON = exports.instanceOfBlockchainAccountInspect = exports.BlockchainAccountInspectCompilerEnum = void 0;
const runtime_1 = require("../runtime");
const BlockchainAccountInspectMethodsInner_1 = require("./BlockchainAccountInspectMethodsInner");
/**
 * @export
 */
exports.BlockchainAccountInspectCompilerEnum = {
    Func: 'func'
};
/**
 * Check if a given object implements the BlockchainAccountInspect interface.
 */
function instanceOfBlockchainAccountInspect(value) {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "codeHash" in value;
    isInstance = isInstance && "methods" in value;
    return isInstance;
}
exports.instanceOfBlockchainAccountInspect = instanceOfBlockchainAccountInspect;
function BlockchainAccountInspectFromJSON(json) {
    return BlockchainAccountInspectFromJSONTyped(json, false);
}
exports.BlockchainAccountInspectFromJSON = BlockchainAccountInspectFromJSON;
function BlockchainAccountInspectFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': json['code'],
        'codeHash': json['code_hash'],
        'methods': (json['methods'].map(BlockchainAccountInspectMethodsInner_1.BlockchainAccountInspectMethodsInnerFromJSON)),
        'compiler': !(0, runtime_1.exists)(json, 'compiler') ? undefined : json['compiler'],
    };
}
exports.BlockchainAccountInspectFromJSONTyped = BlockchainAccountInspectFromJSONTyped;
function BlockchainAccountInspectToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'code_hash': value.codeHash,
        'methods': (value.methods.map(BlockchainAccountInspectMethodsInner_1.BlockchainAccountInspectMethodsInnerToJSON)),
        'compiler': value.compiler,
    };
}
exports.BlockchainAccountInspectToJSON = BlockchainAccountInspectToJSON;
