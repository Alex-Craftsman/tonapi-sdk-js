/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetBlock401Response,
  GetTonConnectPayload200Response,
  TonConnectProof200Response,
  TonConnectProofRequest,
} from '../models';
import {
    GetBlock401ResponseFromJSON,
    GetBlock401ResponseToJSON,
    GetTonConnectPayload200ResponseFromJSON,
    GetTonConnectPayload200ResponseToJSON,
    TonConnectProof200ResponseFromJSON,
    TonConnectProof200ResponseToJSON,
    TonConnectProofRequestFromJSON,
    TonConnectProofRequestToJSON,
} from '../models';

export interface TonConnectProofOperationRequest {
    tonConnectProofRequest: TonConnectProofRequest;
}

/**
 * ConnectApi - interface
 * 
 * @export
 * @interface ConnectApiInterface
 */
export interface ConnectApiInterface {
    /**
     * Get a payload for further token receipt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConnectApiInterface
     */
    getTonConnectPayloadRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTonConnectPayload200Response>>;

    /**
     * Get a payload for further token receipt
     */
    getTonConnectPayload(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTonConnectPayload200Response>;

    /**
     * Account verification and token issuance
     * @param {TonConnectProofRequest} tonConnectProofRequest Data that is expected from TON Connect
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConnectApiInterface
     */
    tonConnectProofRaw(requestParameters: TonConnectProofOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TonConnectProof200Response>>;

    /**
     * Account verification and token issuance
     */
    tonConnectProof(requestParameters: TonConnectProofOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TonConnectProof200Response>;

}

/**
 * 
 */
export class ConnectApi extends runtime.BaseAPI implements ConnectApiInterface {

    /**
     * Get a payload for further token receipt
     */
    async getTonConnectPayloadRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTonConnectPayload200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v2/tonconnect/payload`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetTonConnectPayload200ResponseFromJSON(jsonValue));
    }

    /**
     * Get a payload for further token receipt
     */
    async getTonConnectPayload(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTonConnectPayload200Response> {
        const response = await this.getTonConnectPayloadRaw(initOverrides);
        return await response.value();
    }

    /**
     * Account verification and token issuance
     */
    async tonConnectProofRaw(requestParameters: TonConnectProofOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TonConnectProof200Response>> {
        if (requestParameters.tonConnectProofRequest === null || requestParameters.tonConnectProofRequest === undefined) {
            throw new runtime.RequiredError('tonConnectProofRequest','Required parameter requestParameters.tonConnectProofRequest was null or undefined when calling tonConnectProof.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/tonconnect/proof`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TonConnectProofRequestToJSON(requestParameters.tonConnectProofRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TonConnectProof200ResponseFromJSON(jsonValue));
    }

    /**
     * Account verification and token issuance
     */
    async tonConnectProof(requestParameters: TonConnectProofOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TonConnectProof200Response> {
        const response = await this.tonConnectProofRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
