/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Auctions,
    AuctionsFromJSON,
    AuctionsToJSON,
} from '../models';

/**
 * AuctionsApi - interface
 * 
 * @export
 * @interface AuctionsApiInterface
 */
export interface AuctionsApiInterface {
    /**
     * Get all auctions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuctionsApiInterface
     */
    getAllAuctionsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Auctions>>;

    /**
     * Get all auctions
     */
    getAllAuctions(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Auctions>;

}

/**
 * 
 */
export class AuctionsApi extends runtime.BaseAPI implements AuctionsApiInterface {

    /**
     * Get all auctions
     */
    async getAllAuctionsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Auctions>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWTAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/auction/getCurrent`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuctionsFromJSON(jsonValue));
    }

    /**
     * Get all auctions
     */
    async getAllAuctions(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Auctions> {
        const response = await this.getAllAuctionsRaw(initOverrides);
        return await response.value();
    }

}
