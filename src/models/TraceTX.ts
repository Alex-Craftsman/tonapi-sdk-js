/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TraceMsg,
    TraceMsgFromJSON,
    TraceMsgFromJSONTyped,
    TraceMsgToJSON,
} from './TraceMsg';
import {
    TxAnnotation,
    TxAnnotationFromJSON,
    TxAnnotationFromJSONTyped,
    TxAnnotationToJSON,
} from './TxAnnotation';

/**
 * 
 * @export
 * @interface TraceTX
 */
export interface TraceTX {
    /**
     * 
     * @type {Array<TraceMsg>}
     * @memberof TraceTX
     */
    outMsgs: Array<TraceMsg>;
    /**
     * 
     * @type {string}
     * @memberof TraceTX
     */
    hash: string;
    /**
     * 
     * @type {number}
     * @memberof TraceTX
     */
    fee: number;
    /**
     * 
     * @type {number}
     * @memberof TraceTX
     */
    storageFee: number;
    /**
     * 
     * @type {number}
     * @memberof TraceTX
     */
    otherFee: number;
    /**
     * 
     * @type {number}
     * @memberof TraceTX
     */
    lt: number;
    /**
     * 
     * @type {number}
     * @memberof TraceTX
     */
    utime: number;
    /**
     * 
     * @type {string}
     * @memberof TraceTX
     */
    blockId: string;
    /**
     * 
     * @type {Array<TxAnnotation>}
     * @memberof TraceTX
     */
    annotations: Array<TxAnnotation>;
}

export function TraceTXFromJSON(json: any): TraceTX {
    return TraceTXFromJSONTyped(json, false);
}

export function TraceTXFromJSONTyped(json: any, ignoreDiscriminator: boolean): TraceTX {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'outMsgs': ((json['out_msgs'] as Array<any>).map(TraceMsgFromJSON)),
        'hash': json['hash'],
        'fee': json['fee'],
        'storageFee': json['storage_fee'],
        'otherFee': json['other_fee'],
        'lt': json['lt'],
        'utime': json['utime'],
        'blockId': json['block_id'],
        'annotations': ((json['annotations'] as Array<any>).map(TxAnnotationFromJSON)),
    };
}

export function TraceTXToJSON(value?: TraceTX | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'out_msgs': ((value.outMsgs as Array<any>).map(TraceMsgToJSON)),
        'hash': value.hash,
        'fee': value.fee,
        'storage_fee': value.storageFee,
        'other_fee': value.otherFee,
        'lt': value.lt,
        'utime': value.utime,
        'block_id': value.blockId,
        'annotations': ((value.annotations as Array<any>).map(TxAnnotationToJSON)),
    };
}

