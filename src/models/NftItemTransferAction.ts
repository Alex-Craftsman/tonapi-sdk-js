/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface NftItemTransferAction
 */
export interface NftItemTransferAction {
    /**
     * 
     * @type {string}
     * @memberof NftItemTransferAction
     */
    comment?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NftItemTransferAction
     */
    isRefund: boolean;
    /**
     * 
     * @type {string}
     * @memberof NftItemTransferAction
     */
    nft: string;
    /**
     * raw hex encoded payload
     * @type {string}
     * @memberof NftItemTransferAction
     */
    payload?: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof NftItemTransferAction
     */
    recipient?: AccountAddress;
    /**
     * 
     * @type {AccountAddress}
     * @memberof NftItemTransferAction
     */
    sender?: AccountAddress;
}

/**
 * Check if a given object implements the NftItemTransferAction interface.
 */
export function instanceOfNftItemTransferAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isRefund" in value;
    isInstance = isInstance && "nft" in value;

    return isInstance;
}

export function NftItemTransferActionFromJSON(json: any): NftItemTransferAction {
    return NftItemTransferActionFromJSONTyped(json, false);
}

export function NftItemTransferActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): NftItemTransferAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'isRefund': json['is_refund'],
        'nft': json['nft'],
        'payload': !exists(json, 'payload') ? undefined : json['payload'],
        'recipient': !exists(json, 'recipient') ? undefined : AccountAddressFromJSON(json['recipient']),
        'sender': !exists(json, 'sender') ? undefined : AccountAddressFromJSON(json['sender']),
    };
}

export function NftItemTransferActionToJSON(value?: NftItemTransferAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comment': value.comment,
        'is_refund': value.isRefund,
        'nft': value.nft,
        'payload': value.payload,
        'recipient': AccountAddressToJSON(value.recipient),
        'sender': AccountAddressToJSON(value.sender),
    };
}

