/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountAddress,
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
} from './AccountAddress';
import {
    TxAnnotation,
    TxAnnotationFromJSON,
    TxAnnotationFromJSONTyped,
    TxAnnotationToJSON,
} from './TxAnnotation';

/**
 * 
 * @export
 * @interface AnnotatedTrace
 */
export interface AnnotatedTrace {
    /**
     * 
     * @type {string}
     * @memberof AnnotatedTrace
     */
    hash: string;
    /**
     * 
     * @type {number}
     * @memberof AnnotatedTrace
     */
    lt: number;
    /**
     * 
     * @type {AccountAddress}
     * @memberof AnnotatedTrace
     */
    account: AccountAddress;
    /**
     * 
     * @type {boolean}
     * @memberof AnnotatedTrace
     */
    success: boolean;
    /**
     * 
     * @type {number}
     * @memberof AnnotatedTrace
     */
    fee: number;
    /**
     * 
     * @type {number}
     * @memberof AnnotatedTrace
     */
    otherFee: number;
    /**
     * 
     * @type {number}
     * @memberof AnnotatedTrace
     */
    storageFee: number;
    /**
     * 
     * @type {number}
     * @memberof AnnotatedTrace
     */
    inputValue: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof AnnotatedTrace
     */
    interfaces: Array<string>;
    /**
     * 
     * @type {Array<TxAnnotation>}
     * @memberof AnnotatedTrace
     */
    annotations: Array<TxAnnotation>;
    /**
     * 
     * @type {Array<AnnotatedTrace>}
     * @memberof AnnotatedTrace
     */
    children: Array<AnnotatedTrace>;
}

export function AnnotatedTraceFromJSON(json: any): AnnotatedTrace {
    return AnnotatedTraceFromJSONTyped(json, false);
}

export function AnnotatedTraceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotatedTrace {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'lt': json['lt'],
        'account': AccountAddressFromJSON(json['account']),
        'success': json['success'],
        'fee': json['fee'],
        'otherFee': json['other_fee'],
        'storageFee': json['storage_fee'],
        'inputValue': json['input_value'],
        'interfaces': json['interfaces'],
        'annotations': ((json['annotations'] as Array<any>).map(TxAnnotationFromJSON)),
        'children': ((json['children'] as Array<any>).map(AnnotatedTraceFromJSON)),
    };
}

export function AnnotatedTraceToJSON(value?: AnnotatedTrace | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'lt': value.lt,
        'account': AccountAddressToJSON(value.account),
        'success': value.success,
        'fee': value.fee,
        'other_fee': value.otherFee,
        'storage_fee': value.storageFee,
        'input_value': value.inputValue,
        'interfaces': value.interfaces,
        'annotations': ((value.annotations as Array<any>).map(TxAnnotationToJSON)),
        'children': ((value.children as Array<any>).map(AnnotatedTraceToJSON)),
    };
}

