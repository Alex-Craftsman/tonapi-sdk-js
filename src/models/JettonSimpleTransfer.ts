/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Jetton,
    JettonFromJSON,
    JettonFromJSONTyped,
    JettonToJSON,
} from './Jetton';

/**
 * 
 * @export
 * @interface JettonSimpleTransfer
 */
export interface JettonSimpleTransfer {
    /**
     * 
     * @type {string}
     * @memberof JettonSimpleTransfer
     */
    type: JettonSimpleTransferTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof JettonSimpleTransfer
     */
    amount: string;
    /**
     * 
     * @type {Jetton}
     * @memberof JettonSimpleTransfer
     */
    jetton: Jetton;
}


/**
 * @export
 */
export const JettonSimpleTransferTypeEnum = {
    Income: 'income',
    Outcome: 'outcome'
} as const;
export type JettonSimpleTransferTypeEnum = typeof JettonSimpleTransferTypeEnum[keyof typeof JettonSimpleTransferTypeEnum];


export function JettonSimpleTransferFromJSON(json: any): JettonSimpleTransfer {
    return JettonSimpleTransferFromJSONTyped(json, false);
}

export function JettonSimpleTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): JettonSimpleTransfer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'amount': json['amount'],
        'jetton': JettonFromJSON(json['jetton']),
    };
}

export function JettonSimpleTransferToJSON(value?: JettonSimpleTransfer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'amount': value.amount,
        'jetton': JettonToJSON(value.jetton),
    };
}

